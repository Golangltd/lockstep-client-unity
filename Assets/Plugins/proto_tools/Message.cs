// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Message {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_pb_C2S_ConnectMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.C2S_ConnectMsg, global::pb.C2S_ConnectMsg.Builder> internal__static_pb_C2S_ConnectMsg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_S2C_ConnectMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.S2C_ConnectMsg, global::pb.S2C_ConnectMsg.Builder> internal__static_pb_S2C_ConnectMsg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_S2C_JoinRoomMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.S2C_JoinRoomMsg, global::pb.S2C_JoinRoomMsg.Builder> internal__static_pb_S2C_JoinRoomMsg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_C2S_ProgressMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.C2S_ProgressMsg, global::pb.C2S_ProgressMsg.Builder> internal__static_pb_C2S_ProgressMsg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_S2C_ProgressMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.S2C_ProgressMsg, global::pb.S2C_ProgressMsg.Builder> internal__static_pb_S2C_ProgressMsg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_C2S_InputMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.C2S_InputMsg, global::pb.C2S_InputMsg.Builder> internal__static_pb_C2S_InputMsg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_InputData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.InputData, global::pb.InputData.Builder> internal__static_pb_InputData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_FrameData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.FrameData, global::pb.FrameData.Builder> internal__static_pb_FrameData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_S2C_FrameMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.S2C_FrameMsg, global::pb.S2C_FrameMsg.Builder> internal__static_pb_S2C_FrameMsg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_C2S_ResultMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.C2S_ResultMsg, global::pb.C2S_ResultMsg.Builder> internal__static_pb_C2S_ResultMsg__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Message() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZXNzYWdlLnByb3RvEgJwYiJDCg5DMlNfQ29ubmVjdE1zZxIQCghwbGF5", 
            "ZXJJRBgBIAEoBBIQCghiYXR0bGVJRBgCIAEoBBINCgV0b2tlbhgKIAEoCSIy", 
            "Cg5TMkNfQ29ubmVjdE1zZxIgCgllcnJvckNvZGUYASABKA4yDS5wYi5FUlJP", 
            "UkNPREUiLQoPUzJDX0pvaW5Sb29tTXNnEgoKAmlkGAEgASgEEg4KBm90aGVy", 
            "cxgCIAMoBCIeCg9DMlNfUHJvZ3Jlc3NNc2cSCwoDcHJvGAEgASgFIioKD1My", 
            "Q19Qcm9ncmVzc01zZxIKCgJpZBgBIAEoBBILCgNwcm8YAiABKAUiMQoMQzJT", 
            "X0lucHV0TXNnEgsKA3NpZBgBIAEoBRIJCgF4GAIgASgFEgkKAXkYAyABKAUi", 
            "OgoJSW5wdXREYXRhEgoKAmlkGAEgASgEEgsKA3NpZBgCIAEoBRIJCgF4GAMg", 
            "ASgFEgkKAXkYBCABKAUiOgoJRnJhbWVEYXRhEg8KB2ZyYW1lSUQYASABKA0S", 
            "HAoFaW5wdXQYAiADKAsyDS5wYi5JbnB1dERhdGEiLQoMUzJDX0ZyYW1lTXNn", 
            "Eh0KBmZyYW1lcxgBIAMoCzINLnBiLkZyYW1lRGF0YSIhCg1DMlNfUmVzdWx0", 
            "TXNnEhAKCHdpbm5lcklEGAEgASgEKrUBCgJJRBINCglNU0dfQkVHSU4QABIP", 
            "CgtNU0dfQ29ubmVjdBABEhEKDU1TR19IZWFydGJlYXQQAhIQCgxNU0dfSm9p", 
            "blJvb20QChIQCgxNU0dfUHJvZ3Jlc3MQFBINCglNU0dfUmVhZHkQHhINCglN", 
            "U0dfU3RhcnQQKBINCglNU0dfRnJhbWUQMhINCglNU0dfSW5wdXQQPBIOCgpN", 
            "U0dfUmVzdWx0EGQSDAoHTVNHX0VORBD/ASpJCglFUlJPUkNPREUSCgoGRVJS", 
            "X09rEAASDgoKRVJSX05vUm9vbRABEhEKDUVSUl9Sb29tU3RhdGUQAhINCglF", 
          "UlJfVG9rZW4QAw=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_pb_C2S_ConnectMsg__Descriptor = Descriptor.MessageTypes[0];
        internal__static_pb_C2S_ConnectMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.C2S_ConnectMsg, global::pb.C2S_ConnectMsg.Builder>(internal__static_pb_C2S_ConnectMsg__Descriptor,
                new string[] { "PlayerID", "BattleID", "Token", });
        internal__static_pb_S2C_ConnectMsg__Descriptor = Descriptor.MessageTypes[1];
        internal__static_pb_S2C_ConnectMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.S2C_ConnectMsg, global::pb.S2C_ConnectMsg.Builder>(internal__static_pb_S2C_ConnectMsg__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_pb_S2C_JoinRoomMsg__Descriptor = Descriptor.MessageTypes[2];
        internal__static_pb_S2C_JoinRoomMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.S2C_JoinRoomMsg, global::pb.S2C_JoinRoomMsg.Builder>(internal__static_pb_S2C_JoinRoomMsg__Descriptor,
                new string[] { "Id", "Others", });
        internal__static_pb_C2S_ProgressMsg__Descriptor = Descriptor.MessageTypes[3];
        internal__static_pb_C2S_ProgressMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.C2S_ProgressMsg, global::pb.C2S_ProgressMsg.Builder>(internal__static_pb_C2S_ProgressMsg__Descriptor,
                new string[] { "Pro", });
        internal__static_pb_S2C_ProgressMsg__Descriptor = Descriptor.MessageTypes[4];
        internal__static_pb_S2C_ProgressMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.S2C_ProgressMsg, global::pb.S2C_ProgressMsg.Builder>(internal__static_pb_S2C_ProgressMsg__Descriptor,
                new string[] { "Id", "Pro", });
        internal__static_pb_C2S_InputMsg__Descriptor = Descriptor.MessageTypes[5];
        internal__static_pb_C2S_InputMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.C2S_InputMsg, global::pb.C2S_InputMsg.Builder>(internal__static_pb_C2S_InputMsg__Descriptor,
                new string[] { "Sid", "X", "Y", });
        internal__static_pb_InputData__Descriptor = Descriptor.MessageTypes[6];
        internal__static_pb_InputData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.InputData, global::pb.InputData.Builder>(internal__static_pb_InputData__Descriptor,
                new string[] { "Id", "Sid", "X", "Y", });
        internal__static_pb_FrameData__Descriptor = Descriptor.MessageTypes[7];
        internal__static_pb_FrameData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.FrameData, global::pb.FrameData.Builder>(internal__static_pb_FrameData__Descriptor,
                new string[] { "FrameID", "Input", });
        internal__static_pb_S2C_FrameMsg__Descriptor = Descriptor.MessageTypes[8];
        internal__static_pb_S2C_FrameMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.S2C_FrameMsg, global::pb.S2C_FrameMsg.Builder>(internal__static_pb_S2C_FrameMsg__Descriptor,
                new string[] { "Frames", });
        internal__static_pb_C2S_ResultMsg__Descriptor = Descriptor.MessageTypes[9];
        internal__static_pb_C2S_ResultMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.C2S_ResultMsg, global::pb.C2S_ResultMsg.Builder>(internal__static_pb_C2S_ResultMsg__Descriptor,
                new string[] { "WinnerID", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum ID {
    MSG_BEGIN = 0,
    MSG_Connect = 1,
    MSG_Heartbeat = 2,
    MSG_JoinRoom = 10,
    MSG_Progress = 20,
    MSG_Ready = 30,
    MSG_Start = 40,
    MSG_Frame = 50,
    MSG_Input = 60,
    MSG_Result = 100,
    MSG_END = 255,
  }
  
  public enum ERRORCODE {
    ERR_Ok = 0,
    ERR_NoRoom = 1,
    ERR_RoomState = 2,
    ERR_Token = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class C2S_ConnectMsg : pb::GeneratedMessage<C2S_ConnectMsg, C2S_ConnectMsg.Builder> {
    private C2S_ConnectMsg() { }
    private static readonly C2S_ConnectMsg defaultInstance = new C2S_ConnectMsg().MakeReadOnly();
    private static readonly string[] _c2SConnectMsgFieldNames = new string[] { "battleID", "playerID", "token" };
    private static readonly uint[] _c2SConnectMsgFieldTags = new uint[] { 16, 8, 82 };
    public static C2S_ConnectMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override C2S_ConnectMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override C2S_ConnectMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_C2S_ConnectMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<C2S_ConnectMsg, C2S_ConnectMsg.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_C2S_ConnectMsg__FieldAccessorTable; }
    }
    
    public const int PlayerIDFieldNumber = 1;
    private bool hasPlayerID;
    private ulong playerID_;
    public bool HasPlayerID {
      get { return hasPlayerID; }
    }
    [global::System.CLSCompliant(false)]
    public ulong PlayerID {
      get { return playerID_; }
    }
    
    public const int BattleIDFieldNumber = 2;
    private bool hasBattleID;
    private ulong battleID_;
    public bool HasBattleID {
      get { return hasBattleID; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BattleID {
      get { return battleID_; }
    }
    
    public const int TokenFieldNumber = 10;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _c2SConnectMsgFieldNames;
      if (hasPlayerID) {
        output.WriteUInt64(1, field_names[1], PlayerID);
      }
      if (hasBattleID) {
        output.WriteUInt64(2, field_names[0], BattleID);
      }
      if (hasToken) {
        output.WriteString(10, field_names[2], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPlayerID) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, PlayerID);
      }
      if (hasBattleID) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, BattleID);
      }
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(10, Token);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static C2S_ConnectMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_ConnectMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_ConnectMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_ConnectMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_ConnectMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_ConnectMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static C2S_ConnectMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static C2S_ConnectMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static C2S_ConnectMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_ConnectMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private C2S_ConnectMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(C2S_ConnectMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<C2S_ConnectMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(C2S_ConnectMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private C2S_ConnectMsg result;
      
      private C2S_ConnectMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          C2S_ConnectMsg original = result;
          result = new C2S_ConnectMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override C2S_ConnectMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.C2S_ConnectMsg.Descriptor; }
      }
      
      public override C2S_ConnectMsg DefaultInstanceForType {
        get { return global::pb.C2S_ConnectMsg.DefaultInstance; }
      }
      
      public override C2S_ConnectMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is C2S_ConnectMsg) {
          return MergeFrom((C2S_ConnectMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(C2S_ConnectMsg other) {
        if (other == global::pb.C2S_ConnectMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPlayerID) {
          PlayerID = other.PlayerID;
        }
        if (other.HasBattleID) {
          BattleID = other.BattleID;
        }
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_c2SConnectMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _c2SConnectMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasPlayerID = input.ReadUInt64(ref result.playerID_);
              break;
            }
            case 16: {
              result.hasBattleID = input.ReadUInt64(ref result.battleID_);
              break;
            }
            case 82: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPlayerID {
        get { return result.hasPlayerID; }
      }
      [global::System.CLSCompliant(false)]
      public ulong PlayerID {
        get { return result.PlayerID; }
        set { SetPlayerID(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPlayerID(ulong value) {
        PrepareBuilder();
        result.hasPlayerID = true;
        result.playerID_ = value;
        return this;
      }
      public Builder ClearPlayerID() {
        PrepareBuilder();
        result.hasPlayerID = false;
        result.playerID_ = 0UL;
        return this;
      }
      
      public bool HasBattleID {
        get { return result.hasBattleID; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BattleID {
        get { return result.BattleID; }
        set { SetBattleID(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBattleID(ulong value) {
        PrepareBuilder();
        result.hasBattleID = true;
        result.battleID_ = value;
        return this;
      }
      public Builder ClearBattleID() {
        PrepareBuilder();
        result.hasBattleID = false;
        result.battleID_ = 0UL;
        return this;
      }
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
    }
    static C2S_ConnectMsg() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class S2C_ConnectMsg : pb::GeneratedMessage<S2C_ConnectMsg, S2C_ConnectMsg.Builder> {
    private S2C_ConnectMsg() { }
    private static readonly S2C_ConnectMsg defaultInstance = new S2C_ConnectMsg().MakeReadOnly();
    private static readonly string[] _s2CConnectMsgFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _s2CConnectMsgFieldTags = new uint[] { 8 };
    public static S2C_ConnectMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override S2C_ConnectMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override S2C_ConnectMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_S2C_ConnectMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<S2C_ConnectMsg, S2C_ConnectMsg.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_S2C_ConnectMsg__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private global::pb.ERRORCODE errorCode_ = global::pb.ERRORCODE.ERR_Ok;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public global::pb.ERRORCODE ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _s2CConnectMsgFieldNames;
      if (hasErrorCode) {
        output.WriteEnum(1, field_names[0], (int) ErrorCode, ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static S2C_ConnectMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_ConnectMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_ConnectMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_ConnectMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_ConnectMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_ConnectMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static S2C_ConnectMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static S2C_ConnectMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static S2C_ConnectMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_ConnectMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private S2C_ConnectMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(S2C_ConnectMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<S2C_ConnectMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(S2C_ConnectMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private S2C_ConnectMsg result;
      
      private S2C_ConnectMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          S2C_ConnectMsg original = result;
          result = new S2C_ConnectMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override S2C_ConnectMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.S2C_ConnectMsg.Descriptor; }
      }
      
      public override S2C_ConnectMsg DefaultInstanceForType {
        get { return global::pb.S2C_ConnectMsg.DefaultInstance; }
      }
      
      public override S2C_ConnectMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is S2C_ConnectMsg) {
          return MergeFrom((S2C_ConnectMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(S2C_ConnectMsg other) {
        if (other == global::pb.S2C_ConnectMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_s2CConnectMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _s2CConnectMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.errorCode_, out unknown)) {
                result.hasErrorCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
       get { return result.hasErrorCode; }
      }
      public global::pb.ERRORCODE ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(global::pb.ERRORCODE value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = global::pb.ERRORCODE.ERR_Ok;
        return this;
      }
    }
    static S2C_ConnectMsg() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class S2C_JoinRoomMsg : pb::GeneratedMessage<S2C_JoinRoomMsg, S2C_JoinRoomMsg.Builder> {
    private S2C_JoinRoomMsg() { }
    private static readonly S2C_JoinRoomMsg defaultInstance = new S2C_JoinRoomMsg().MakeReadOnly();
    private static readonly string[] _s2CJoinRoomMsgFieldNames = new string[] { "id", "others" };
    private static readonly uint[] _s2CJoinRoomMsgFieldTags = new uint[] { 8, 16 };
    public static S2C_JoinRoomMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override S2C_JoinRoomMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override S2C_JoinRoomMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_S2C_JoinRoomMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<S2C_JoinRoomMsg, S2C_JoinRoomMsg.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_S2C_JoinRoomMsg__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Id {
      get { return id_; }
    }
    
    public const int OthersFieldNumber = 2;
    private pbc::PopsicleList<ulong> others_ = new pbc::PopsicleList<ulong>();
    [global::System.CLSCompliant(false)]
    public scg::IList<ulong> OthersList {
      get { return pbc::Lists.AsReadOnly(others_); }
    }
    public int OthersCount {
      get { return others_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetOthers(int index) {
      return others_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _s2CJoinRoomMsgFieldNames;
      if (hasId) {
        output.WriteUInt64(1, field_names[0], Id);
      }
      if (others_.Count > 0) {
        output.WriteUInt64Array(2, field_names[1], others_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
      }
      {
        int dataSize = 0;
        foreach (ulong element in OthersList) {
          dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * others_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static S2C_JoinRoomMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_JoinRoomMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_JoinRoomMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_JoinRoomMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_JoinRoomMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_JoinRoomMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static S2C_JoinRoomMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static S2C_JoinRoomMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static S2C_JoinRoomMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_JoinRoomMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private S2C_JoinRoomMsg MakeReadOnly() {
      others_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(S2C_JoinRoomMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<S2C_JoinRoomMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(S2C_JoinRoomMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private S2C_JoinRoomMsg result;
      
      private S2C_JoinRoomMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          S2C_JoinRoomMsg original = result;
          result = new S2C_JoinRoomMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override S2C_JoinRoomMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.S2C_JoinRoomMsg.Descriptor; }
      }
      
      public override S2C_JoinRoomMsg DefaultInstanceForType {
        get { return global::pb.S2C_JoinRoomMsg.DefaultInstance; }
      }
      
      public override S2C_JoinRoomMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is S2C_JoinRoomMsg) {
          return MergeFrom((S2C_JoinRoomMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(S2C_JoinRoomMsg other) {
        if (other == global::pb.S2C_JoinRoomMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.others_.Count != 0) {
          result.others_.Add(other.others_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_s2CJoinRoomMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _s2CJoinRoomMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt64(ref result.id_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt64Array(tag, field_name, result.others_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0UL;
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<ulong> OthersList {
        get { return PrepareBuilder().others_; }
      }
      public int OthersCount {
        get { return result.OthersCount; }
      }
      [global::System.CLSCompliant(false)]
      public ulong GetOthers(int index) {
        return result.GetOthers(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOthers(int index, ulong value) {
        PrepareBuilder();
        result.others_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddOthers(ulong value) {
        PrepareBuilder();
        result.others_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeOthers(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.others_.Add(values);
        return this;
      }
      public Builder ClearOthers() {
        PrepareBuilder();
        result.others_.Clear();
        return this;
      }
    }
    static S2C_JoinRoomMsg() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class C2S_ProgressMsg : pb::GeneratedMessage<C2S_ProgressMsg, C2S_ProgressMsg.Builder> {
    private C2S_ProgressMsg() { }
    private static readonly C2S_ProgressMsg defaultInstance = new C2S_ProgressMsg().MakeReadOnly();
    private static readonly string[] _c2SProgressMsgFieldNames = new string[] { "pro" };
    private static readonly uint[] _c2SProgressMsgFieldTags = new uint[] { 8 };
    public static C2S_ProgressMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override C2S_ProgressMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override C2S_ProgressMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_C2S_ProgressMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<C2S_ProgressMsg, C2S_ProgressMsg.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_C2S_ProgressMsg__FieldAccessorTable; }
    }
    
    public const int ProFieldNumber = 1;
    private bool hasPro;
    private int pro_;
    public bool HasPro {
      get { return hasPro; }
    }
    public int Pro {
      get { return pro_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _c2SProgressMsgFieldNames;
      if (hasPro) {
        output.WriteInt32(1, field_names[0], Pro);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPro) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Pro);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static C2S_ProgressMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_ProgressMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_ProgressMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_ProgressMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_ProgressMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_ProgressMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static C2S_ProgressMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static C2S_ProgressMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static C2S_ProgressMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_ProgressMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private C2S_ProgressMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(C2S_ProgressMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<C2S_ProgressMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(C2S_ProgressMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private C2S_ProgressMsg result;
      
      private C2S_ProgressMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          C2S_ProgressMsg original = result;
          result = new C2S_ProgressMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override C2S_ProgressMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.C2S_ProgressMsg.Descriptor; }
      }
      
      public override C2S_ProgressMsg DefaultInstanceForType {
        get { return global::pb.C2S_ProgressMsg.DefaultInstance; }
      }
      
      public override C2S_ProgressMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is C2S_ProgressMsg) {
          return MergeFrom((C2S_ProgressMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(C2S_ProgressMsg other) {
        if (other == global::pb.C2S_ProgressMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPro) {
          Pro = other.Pro;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_c2SProgressMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _c2SProgressMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasPro = input.ReadInt32(ref result.pro_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPro {
        get { return result.hasPro; }
      }
      public int Pro {
        get { return result.Pro; }
        set { SetPro(value); }
      }
      public Builder SetPro(int value) {
        PrepareBuilder();
        result.hasPro = true;
        result.pro_ = value;
        return this;
      }
      public Builder ClearPro() {
        PrepareBuilder();
        result.hasPro = false;
        result.pro_ = 0;
        return this;
      }
    }
    static C2S_ProgressMsg() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class S2C_ProgressMsg : pb::GeneratedMessage<S2C_ProgressMsg, S2C_ProgressMsg.Builder> {
    private S2C_ProgressMsg() { }
    private static readonly S2C_ProgressMsg defaultInstance = new S2C_ProgressMsg().MakeReadOnly();
    private static readonly string[] _s2CProgressMsgFieldNames = new string[] { "id", "pro" };
    private static readonly uint[] _s2CProgressMsgFieldTags = new uint[] { 8, 16 };
    public static S2C_ProgressMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override S2C_ProgressMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override S2C_ProgressMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_S2C_ProgressMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<S2C_ProgressMsg, S2C_ProgressMsg.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_S2C_ProgressMsg__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Id {
      get { return id_; }
    }
    
    public const int ProFieldNumber = 2;
    private bool hasPro;
    private int pro_;
    public bool HasPro {
      get { return hasPro; }
    }
    public int Pro {
      get { return pro_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _s2CProgressMsgFieldNames;
      if (hasId) {
        output.WriteUInt64(1, field_names[0], Id);
      }
      if (hasPro) {
        output.WriteInt32(2, field_names[1], Pro);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
      }
      if (hasPro) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Pro);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static S2C_ProgressMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_ProgressMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_ProgressMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_ProgressMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_ProgressMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_ProgressMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static S2C_ProgressMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static S2C_ProgressMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static S2C_ProgressMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_ProgressMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private S2C_ProgressMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(S2C_ProgressMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<S2C_ProgressMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(S2C_ProgressMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private S2C_ProgressMsg result;
      
      private S2C_ProgressMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          S2C_ProgressMsg original = result;
          result = new S2C_ProgressMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override S2C_ProgressMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.S2C_ProgressMsg.Descriptor; }
      }
      
      public override S2C_ProgressMsg DefaultInstanceForType {
        get { return global::pb.S2C_ProgressMsg.DefaultInstance; }
      }
      
      public override S2C_ProgressMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is S2C_ProgressMsg) {
          return MergeFrom((S2C_ProgressMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(S2C_ProgressMsg other) {
        if (other == global::pb.S2C_ProgressMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasPro) {
          Pro = other.Pro;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_s2CProgressMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _s2CProgressMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt64(ref result.id_);
              break;
            }
            case 16: {
              result.hasPro = input.ReadInt32(ref result.pro_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0UL;
        return this;
      }
      
      public bool HasPro {
        get { return result.hasPro; }
      }
      public int Pro {
        get { return result.Pro; }
        set { SetPro(value); }
      }
      public Builder SetPro(int value) {
        PrepareBuilder();
        result.hasPro = true;
        result.pro_ = value;
        return this;
      }
      public Builder ClearPro() {
        PrepareBuilder();
        result.hasPro = false;
        result.pro_ = 0;
        return this;
      }
    }
    static S2C_ProgressMsg() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class C2S_InputMsg : pb::GeneratedMessage<C2S_InputMsg, C2S_InputMsg.Builder> {
    private C2S_InputMsg() { }
    private static readonly C2S_InputMsg defaultInstance = new C2S_InputMsg().MakeReadOnly();
    private static readonly string[] _c2SInputMsgFieldNames = new string[] { "sid", "x", "y" };
    private static readonly uint[] _c2SInputMsgFieldTags = new uint[] { 8, 16, 24 };
    public static C2S_InputMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override C2S_InputMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override C2S_InputMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_C2S_InputMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<C2S_InputMsg, C2S_InputMsg.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_C2S_InputMsg__FieldAccessorTable; }
    }
    
    public const int SidFieldNumber = 1;
    private bool hasSid;
    private int sid_;
    public bool HasSid {
      get { return hasSid; }
    }
    public int Sid {
      get { return sid_; }
    }
    
    public const int XFieldNumber = 2;
    private bool hasX;
    private int x_;
    public bool HasX {
      get { return hasX; }
    }
    public int X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 3;
    private bool hasY;
    private int y_;
    public bool HasY {
      get { return hasY; }
    }
    public int Y {
      get { return y_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _c2SInputMsgFieldNames;
      if (hasSid) {
        output.WriteInt32(1, field_names[0], Sid);
      }
      if (hasX) {
        output.WriteInt32(2, field_names[1], X);
      }
      if (hasY) {
        output.WriteInt32(3, field_names[2], Y);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSid) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Sid);
      }
      if (hasX) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Y);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static C2S_InputMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_InputMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_InputMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_InputMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_InputMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_InputMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static C2S_InputMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static C2S_InputMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static C2S_InputMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_InputMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private C2S_InputMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(C2S_InputMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<C2S_InputMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(C2S_InputMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private C2S_InputMsg result;
      
      private C2S_InputMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          C2S_InputMsg original = result;
          result = new C2S_InputMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override C2S_InputMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.C2S_InputMsg.Descriptor; }
      }
      
      public override C2S_InputMsg DefaultInstanceForType {
        get { return global::pb.C2S_InputMsg.DefaultInstance; }
      }
      
      public override C2S_InputMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is C2S_InputMsg) {
          return MergeFrom((C2S_InputMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(C2S_InputMsg other) {
        if (other == global::pb.C2S_InputMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSid) {
          Sid = other.Sid;
        }
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_c2SInputMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _c2SInputMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSid = input.ReadInt32(ref result.sid_);
              break;
            }
            case 16: {
              result.hasX = input.ReadInt32(ref result.x_);
              break;
            }
            case 24: {
              result.hasY = input.ReadInt32(ref result.y_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSid {
        get { return result.hasSid; }
      }
      public int Sid {
        get { return result.Sid; }
        set { SetSid(value); }
      }
      public Builder SetSid(int value) {
        PrepareBuilder();
        result.hasSid = true;
        result.sid_ = value;
        return this;
      }
      public Builder ClearSid() {
        PrepareBuilder();
        result.hasSid = false;
        result.sid_ = 0;
        return this;
      }
      
      public bool HasX {
        get { return result.hasX; }
      }
      public int X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(int value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public int Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(int value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
    }
    static C2S_InputMsg() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class InputData : pb::GeneratedMessage<InputData, InputData.Builder> {
    private InputData() { }
    private static readonly InputData defaultInstance = new InputData().MakeReadOnly();
    private static readonly string[] _inputDataFieldNames = new string[] { "id", "sid", "x", "y" };
    private static readonly uint[] _inputDataFieldTags = new uint[] { 8, 16, 24, 32 };
    public static InputData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InputData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InputData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_InputData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InputData, InputData.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_InputData__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Id {
      get { return id_; }
    }
    
    public const int SidFieldNumber = 2;
    private bool hasSid;
    private int sid_;
    public bool HasSid {
      get { return hasSid; }
    }
    public int Sid {
      get { return sid_; }
    }
    
    public const int XFieldNumber = 3;
    private bool hasX;
    private int x_;
    public bool HasX {
      get { return hasX; }
    }
    public int X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 4;
    private bool hasY;
    private int y_;
    public bool HasY {
      get { return hasY; }
    }
    public int Y {
      get { return y_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _inputDataFieldNames;
      if (hasId) {
        output.WriteUInt64(1, field_names[0], Id);
      }
      if (hasSid) {
        output.WriteInt32(2, field_names[1], Sid);
      }
      if (hasX) {
        output.WriteInt32(3, field_names[2], X);
      }
      if (hasY) {
        output.WriteInt32(4, field_names[3], Y);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
      }
      if (hasSid) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Sid);
      }
      if (hasX) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Y);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static InputData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InputData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InputData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InputData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InputData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InputData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InputData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InputData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InputData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InputData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InputData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InputData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<InputData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InputData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InputData result;
      
      private InputData PrepareBuilder() {
        if (resultIsReadOnly) {
          InputData original = result;
          result = new InputData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InputData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.InputData.Descriptor; }
      }
      
      public override InputData DefaultInstanceForType {
        get { return global::pb.InputData.DefaultInstance; }
      }
      
      public override InputData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InputData) {
          return MergeFrom((InputData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InputData other) {
        if (other == global::pb.InputData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasSid) {
          Sid = other.Sid;
        }
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_inputDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _inputDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt64(ref result.id_);
              break;
            }
            case 16: {
              result.hasSid = input.ReadInt32(ref result.sid_);
              break;
            }
            case 24: {
              result.hasX = input.ReadInt32(ref result.x_);
              break;
            }
            case 32: {
              result.hasY = input.ReadInt32(ref result.y_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0UL;
        return this;
      }
      
      public bool HasSid {
        get { return result.hasSid; }
      }
      public int Sid {
        get { return result.Sid; }
        set { SetSid(value); }
      }
      public Builder SetSid(int value) {
        PrepareBuilder();
        result.hasSid = true;
        result.sid_ = value;
        return this;
      }
      public Builder ClearSid() {
        PrepareBuilder();
        result.hasSid = false;
        result.sid_ = 0;
        return this;
      }
      
      public bool HasX {
        get { return result.hasX; }
      }
      public int X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(int value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public int Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(int value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
    }
    static InputData() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FrameData : pb::GeneratedMessage<FrameData, FrameData.Builder> {
    private FrameData() { }
    private static readonly FrameData defaultInstance = new FrameData().MakeReadOnly();
    private static readonly string[] _frameDataFieldNames = new string[] { "frameID", "input" };
    private static readonly uint[] _frameDataFieldTags = new uint[] { 8, 18 };
    public static FrameData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FrameData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FrameData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_FrameData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FrameData, FrameData.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_FrameData__FieldAccessorTable; }
    }
    
    public const int FrameIDFieldNumber = 1;
    private bool hasFrameID;
    private uint frameID_;
    public bool HasFrameID {
      get { return hasFrameID; }
    }
    [global::System.CLSCompliant(false)]
    public uint FrameID {
      get { return frameID_; }
    }
    
    public const int InputFieldNumber = 2;
    private pbc::PopsicleList<global::pb.InputData> input_ = new pbc::PopsicleList<global::pb.InputData>();
    public scg::IList<global::pb.InputData> InputList {
      get { return input_; }
    }
    public int InputCount {
      get { return input_.Count; }
    }
    public global::pb.InputData GetInput(int index) {
      return input_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _frameDataFieldNames;
      if (hasFrameID) {
        output.WriteUInt32(1, field_names[0], FrameID);
      }
      if (input_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], input_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFrameID) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, FrameID);
      }
      foreach (global::pb.InputData element in InputList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FrameData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FrameData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FrameData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FrameData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FrameData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FrameData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FrameData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FrameData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FrameData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FrameData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FrameData MakeReadOnly() {
      input_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FrameData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FrameData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FrameData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FrameData result;
      
      private FrameData PrepareBuilder() {
        if (resultIsReadOnly) {
          FrameData original = result;
          result = new FrameData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FrameData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.FrameData.Descriptor; }
      }
      
      public override FrameData DefaultInstanceForType {
        get { return global::pb.FrameData.DefaultInstance; }
      }
      
      public override FrameData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FrameData) {
          return MergeFrom((FrameData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FrameData other) {
        if (other == global::pb.FrameData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFrameID) {
          FrameID = other.FrameID;
        }
        if (other.input_.Count != 0) {
          result.input_.Add(other.input_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_frameDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _frameDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasFrameID = input.ReadUInt32(ref result.frameID_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.input_, global::pb.InputData.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFrameID {
        get { return result.hasFrameID; }
      }
      [global::System.CLSCompliant(false)]
      public uint FrameID {
        get { return result.FrameID; }
        set { SetFrameID(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFrameID(uint value) {
        PrepareBuilder();
        result.hasFrameID = true;
        result.frameID_ = value;
        return this;
      }
      public Builder ClearFrameID() {
        PrepareBuilder();
        result.hasFrameID = false;
        result.frameID_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::pb.InputData> InputList {
        get { return PrepareBuilder().input_; }
      }
      public int InputCount {
        get { return result.InputCount; }
      }
      public global::pb.InputData GetInput(int index) {
        return result.GetInput(index);
      }
      public Builder SetInput(int index, global::pb.InputData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.input_[index] = value;
        return this;
      }
      public Builder SetInput(int index, global::pb.InputData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.input_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInput(global::pb.InputData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.input_.Add(value);
        return this;
      }
      public Builder AddInput(global::pb.InputData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.input_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInput(scg::IEnumerable<global::pb.InputData> values) {
        PrepareBuilder();
        result.input_.Add(values);
        return this;
      }
      public Builder ClearInput() {
        PrepareBuilder();
        result.input_.Clear();
        return this;
      }
    }
    static FrameData() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class S2C_FrameMsg : pb::GeneratedMessage<S2C_FrameMsg, S2C_FrameMsg.Builder> {
    private S2C_FrameMsg() { }
    private static readonly S2C_FrameMsg defaultInstance = new S2C_FrameMsg().MakeReadOnly();
    private static readonly string[] _s2CFrameMsgFieldNames = new string[] { "frames" };
    private static readonly uint[] _s2CFrameMsgFieldTags = new uint[] { 10 };
    public static S2C_FrameMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override S2C_FrameMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override S2C_FrameMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_S2C_FrameMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<S2C_FrameMsg, S2C_FrameMsg.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_S2C_FrameMsg__FieldAccessorTable; }
    }
    
    public const int FramesFieldNumber = 1;
    private pbc::PopsicleList<global::pb.FrameData> frames_ = new pbc::PopsicleList<global::pb.FrameData>();
    public scg::IList<global::pb.FrameData> FramesList {
      get { return frames_; }
    }
    public int FramesCount {
      get { return frames_.Count; }
    }
    public global::pb.FrameData GetFrames(int index) {
      return frames_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _s2CFrameMsgFieldNames;
      if (frames_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], frames_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::pb.FrameData element in FramesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static S2C_FrameMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_FrameMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_FrameMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_FrameMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_FrameMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_FrameMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static S2C_FrameMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static S2C_FrameMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static S2C_FrameMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_FrameMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private S2C_FrameMsg MakeReadOnly() {
      frames_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(S2C_FrameMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<S2C_FrameMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(S2C_FrameMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private S2C_FrameMsg result;
      
      private S2C_FrameMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          S2C_FrameMsg original = result;
          result = new S2C_FrameMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override S2C_FrameMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.S2C_FrameMsg.Descriptor; }
      }
      
      public override S2C_FrameMsg DefaultInstanceForType {
        get { return global::pb.S2C_FrameMsg.DefaultInstance; }
      }
      
      public override S2C_FrameMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is S2C_FrameMsg) {
          return MergeFrom((S2C_FrameMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(S2C_FrameMsg other) {
        if (other == global::pb.S2C_FrameMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.frames_.Count != 0) {
          result.frames_.Add(other.frames_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_s2CFrameMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _s2CFrameMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.frames_, global::pb.FrameData.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::pb.FrameData> FramesList {
        get { return PrepareBuilder().frames_; }
      }
      public int FramesCount {
        get { return result.FramesCount; }
      }
      public global::pb.FrameData GetFrames(int index) {
        return result.GetFrames(index);
      }
      public Builder SetFrames(int index, global::pb.FrameData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.frames_[index] = value;
        return this;
      }
      public Builder SetFrames(int index, global::pb.FrameData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.frames_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFrames(global::pb.FrameData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.frames_.Add(value);
        return this;
      }
      public Builder AddFrames(global::pb.FrameData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.frames_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFrames(scg::IEnumerable<global::pb.FrameData> values) {
        PrepareBuilder();
        result.frames_.Add(values);
        return this;
      }
      public Builder ClearFrames() {
        PrepareBuilder();
        result.frames_.Clear();
        return this;
      }
    }
    static S2C_FrameMsg() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class C2S_ResultMsg : pb::GeneratedMessage<C2S_ResultMsg, C2S_ResultMsg.Builder> {
    private C2S_ResultMsg() { }
    private static readonly C2S_ResultMsg defaultInstance = new C2S_ResultMsg().MakeReadOnly();
    private static readonly string[] _c2SResultMsgFieldNames = new string[] { "winnerID" };
    private static readonly uint[] _c2SResultMsgFieldTags = new uint[] { 8 };
    public static C2S_ResultMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override C2S_ResultMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override C2S_ResultMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_C2S_ResultMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<C2S_ResultMsg, C2S_ResultMsg.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_C2S_ResultMsg__FieldAccessorTable; }
    }
    
    public const int WinnerIDFieldNumber = 1;
    private bool hasWinnerID;
    private ulong winnerID_;
    public bool HasWinnerID {
      get { return hasWinnerID; }
    }
    [global::System.CLSCompliant(false)]
    public ulong WinnerID {
      get { return winnerID_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _c2SResultMsgFieldNames;
      if (hasWinnerID) {
        output.WriteUInt64(1, field_names[0], WinnerID);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasWinnerID) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, WinnerID);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static C2S_ResultMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_ResultMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_ResultMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_ResultMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_ResultMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_ResultMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static C2S_ResultMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static C2S_ResultMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static C2S_ResultMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_ResultMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private C2S_ResultMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(C2S_ResultMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<C2S_ResultMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(C2S_ResultMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private C2S_ResultMsg result;
      
      private C2S_ResultMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          C2S_ResultMsg original = result;
          result = new C2S_ResultMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override C2S_ResultMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.C2S_ResultMsg.Descriptor; }
      }
      
      public override C2S_ResultMsg DefaultInstanceForType {
        get { return global::pb.C2S_ResultMsg.DefaultInstance; }
      }
      
      public override C2S_ResultMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is C2S_ResultMsg) {
          return MergeFrom((C2S_ResultMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(C2S_ResultMsg other) {
        if (other == global::pb.C2S_ResultMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasWinnerID) {
          WinnerID = other.WinnerID;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_c2SResultMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _c2SResultMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasWinnerID = input.ReadUInt64(ref result.winnerID_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasWinnerID {
        get { return result.hasWinnerID; }
      }
      [global::System.CLSCompliant(false)]
      public ulong WinnerID {
        get { return result.WinnerID; }
        set { SetWinnerID(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetWinnerID(ulong value) {
        PrepareBuilder();
        result.hasWinnerID = true;
        result.winnerID_ = value;
        return this;
      }
      public Builder ClearWinnerID() {
        PrepareBuilder();
        result.hasWinnerID = false;
        result.winnerID_ = 0UL;
        return this;
      }
    }
    static C2S_ResultMsg() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
